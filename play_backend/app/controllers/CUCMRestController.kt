package controllers

import com.fasterxml.jackson.databind.ObjectMapper
import com.fasterxml.jackson.databind.type.SimpleType
import io.github.casuallyblue.cucm.*
import play.libs.Json
import play.mvc.*
import javax.xml.ws.BindingProvider

/**
 * Main Controller for CUCM Rest service
 */
class CUCMRestController: Controller() {
    // Use companion object to avoid reloading the
    // axl client config on each controller instantiation
    companion object {
        val service = AXLAPIService()
    }

    /**
     * AXL Client (generated by wsimport)
     */
    private val client: AXLPort = getClient()

    private fun getClient(): AXLPort {
        val client = service.axlPort
        (client as BindingProvider).requestContext.let {
            it[BindingProvider.ENDPOINT_ADDRESS_PROPERTY] = "https://cdacucmpub.coramdeo.local:8443/axl/"
            it[BindingProvider.USERNAME_PROPERTY] = "cdaadmin"
            it[BindingProvider.PASSWORD_PROPERTY] = "cdaadmpw"
        }

        return client
    }

    /**
     * Get Json of all phones configured on the CUCM system
     */
    fun getPhones(): Result? {
        return ok(Json.toJson(getPhoneList()))
    }

    private fun getPhoneList(): List<LPhone> {
        val nameFilter = "%"
        getRequestFromJson<ListPhoneReq>("""{"searchCriteria":{"name":"$nameFilter"}}""") .let {
            return client.listPhone(it).`return`.phone
        }
    }

    private inline fun <reified T : Any> getRequestFromJson(json: String): T {
        return ObjectMapper().readValue(json, SimpleType.constructUnsafe(T::class.java))
    }

    /**
     * Test of kotlin view template
     */
    fun testView(): Result {
        return views.TestView().render()
    }
}